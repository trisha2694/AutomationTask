
{
    "AWSTemplateFormatVersion": "2010-09-09",
	"Description": "AWS Cloud Formation template to create lambda function to list ec2 instances in multiregion",
    "Parameters": {
		"EnvironUsed": {
            "Default": "dev",
            "Description": "The Environment Used",
            "Type": "String",
            "AllowedValues": [
				"lab",
                "dev",
                "uat",
                "prod"
                
            ],
            "ConstraintDescription": "Must be one of the four Allowed Values i.e. dev, uat, lab, prod"
        },
        "OperatorEmail": {
            "Default": "trisha26sinha@gmail.com",
            "Description": "Email address to notify if there are any operational issues related to application",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
 		"ProjectName": {
 			"Default": "Project-Demo",
 			"Description": "Enter valid Project Name.",
 			"Type": "String",
 			"AllowedPattern": "[-_ a-zA-Z0-9/.]*"
 		},
		"CodePath" :{
			"Type": "String",
			"Default": "lambda-code/multiregion_describe_instnaces.zip"
		},
		"ConfigFileName":{
			"Type": "String",
			"Default": ""
		}
    },
    "Resources": {
		"LambdaLogGroup": {
			"Type": "AWS::Logs::LogGroup",
			"Metadata": {
				"comment": "Log Group to store Lambda logs"
			},
			"Properties": {
				"RetentionInDays": 30,
				"LogGroupName": {"Fn::Join": ["-",["/aws/lambda/",{"Ref": "ProjectName"},"-Describe-Instance-Lambda-",{"Ref": "EnvironUsed"}]]}
			}
		},
		"LambdaRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": [
								"lambda.amazonaws.com"
							]
						},
						"Action": [
							"sts:AssumeRole"
						]
					}]
				},
				"Path": "/",
				"RoleName":{
					"Fn::Join": ["-", [{
						"Ref": "ProjectName"
					}, "Lambda-Role", {
						"Ref": "EnvironUsed"
					}]]
				},
				"Tags": [
					{
					  "Key" : "ProjectName",
					  "Value" : {"Ref": "ProjectName"}
					},					
					{
					  "Key" : "Contact",
					  "Value" : {"Ref": "OperatorEmail"}
					}					
				]	,				
				"Policies": [
					{
						"PolicyName": "FullPermission",
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Sid": "LambdalogsPermission",
									"Effect": "Allow",
									"Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents", "logs:GetLogEvents"],
									"Resource": [{
										"Fn::Join": ["", ["arn:aws:logs:", {
											"Ref": "AWS::Region"
										}, ":", {
											"Ref": "AWS::AccountId"
										}, ":log-group:/aws/lambda", "/*"]]
									}]
								},
								{
									"Sid": "ec2ReadPermissions",
									"Effect": "Allow",
									"Action": ["logs:DescribeDestinations", "logs:DescribeLogGroups", "logs:DescribeLogStreams", "logs:DescribeMetricFilters", "cloudwatch:Put*"],
									"Resource": "*"
								},
								{
									"Sid": "ec2ReadPermissions",
									"Effect": "Allow",
									"Action": "ec2:Describe*",
									"Resource": "*"
								}							
							]
						}
					}
				]
			}
		},				
		"Lambda": {
			"Type": "AWS::Lambda::Function",
			"DependsOn":["LambdaLogGroup","LambdaRole"]
			"Properties": {
				"Handler": "lambda_function.lambda_handler",
				"FunctionName": {"Fn::Join": ["-",[{"Ref": "ProjectName"},"Describe-Instance-Lambda",{"Ref": "EnvironUsed"}]]},
				"Role":{
					"Fn::GetAtt": ["LambdaRole", "Arn"]
				},
				"Code": {
					"S3Bucket": {"Ref": "SourceBucketName"},
					"S3Key": { "Ref": "CodePath"	}
				},
				"Tags":[
					{
					  "Key" : "ProjectName",
					  "Value" : {"Ref": "ProjectName"}
					},					
					{
					  "Key" : "Contact",
					  "Value" : {"Ref": "OperatorEmail"}
					}
					
				],
				"Runtime": "python3.8",
				"Environment": {
					"Variables": {    
						"ConfigFileName":{ "Ref": "ConfigFileName"	}
						
					}
				},
				"MemorySize": 128,
				"Timeout": 900
			}
		}
	},
	"Outputs": {		
		"LambdaRoleArn": {
			"Description": "Arn of the Lambda Role",
			"Value": {
				"Fn::GetAtt": [
					"LambdaRole",
					"Arn"
				]
			}
		},
		"LambdaLogArn": {
			"Description": "Arn of the Lambda Log Group",
			"Value": {
				"Fn::GetAtt": [
					"LambdaLogGroup",
					"Arn"
				]
			}
		},
		"LambdaArn": {
			"Description": "Arn of the Lambda",
			"Value": {
				"Fn::GetAtt": [
					"Lambda",
					"Arn"
				]
			}
		}
	}
}